IEEE Floating Point Representation
float f  = 1.0; // single precision -> 32 bits 
double d = 2.0; // double precision -> 64 bits 

sign | exponent | fraction/mantissa
0    | 01111111 | 10000000000000000000000

FORMULA:
(-1)^sign * (1 + fraction) * 2^(exponent - bias) 
bias = 127

IEEE -> float
a) 0 01111111 10000000000000000000000
sign     = 0
exponent = 127
fraction = 0.5

-1^sign * (1 + fraction) * 2^(exponent - 127)
= -1^0 * (1 + 0.5) * 2^(127-127)
= 1 * 1.5 * 1 = 1.5


b) 0 01111110 00000000000000000000000
sign     = 0
exponent = 126
fraction = 0

-1^sign * (1 + fraction) * 2^(exponent - bias)
= -1^0 * (1 + 0) * 2^(126-127)
= 1 * 1 * 2^-1
= 0.5


float -> IEEE binary 
Hints:
2^(-1) = 0.5
2^(-2) = 0.25
2^(-3) = 0.125
2^(-4) = 0.0625

STEPS:
1. Finding the biggest power of 2 that fits
2. Convert into the formula
3. Convert to binary 

FORMULA:
-1^sign * (1 + fraction) * 2^(exponent - 127)

a) 2.5 = 1 * 1.25 * 2^1
       = -1^0 * (1 + 0.25) * 2^(128 - 127)
sign     = 0
exponent = 128 = 1000 0000
fraction = 0.25 = 0100...0000
0 10000000 0100.....0000

2^(-2) = 0.25
b) 0.375 = 1 * 1.5 * 0.25
         = -1^0 * (1 + 0.5) * 2^(125 - 127)
sign     = 0 = 0
fraction = 0.5 = 1000..0000
exponent = 125 = 01111101
0 01111101 1000..0000